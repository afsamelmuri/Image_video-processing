import cv2
import numpy as np

def get_neighbors(image, x, y):
    rows, cols = image.shape[:2]
    
    # 4-Neighbors
    neighbors_4 = []
    if x > 0:
        neighbors_4.append(image[x-1, y])  # Top
    if x < rows - 1:
        neighbors_4.append(image[x+1, y])  # Bottom
    if y > 0:
        neighbors_4.append(image[x, y-1])  # Left
    if y < cols - 1:
        neighbors_4.append(image[x, y+1])  # Right

    # 8-Neighbors
    neighbors_8 = neighbors_4.copy()
    if x > 0 and y > 0:
        neighbors_8.append(image[x-1, y-1])  # Top-Left
    if x > 0 and y < cols - 1:
        neighbors_8.append(image[x-1, y+1])  # Top-Right
    if x < rows - 1 and y > 0:
        neighbors_8.append(image[x+1, y-1])  # Bottom-Left
    if x < rows - 1 and y < cols - 1:
        neighbors_8.append(image[x+1, y+1])  # Bottom-Right
    
    return neighbors_4, neighbors_8

# Load the image
image = cv2.imread('image.jpg')

# Check if the image is loaded successfully
if image is None:
    print("Error: Could not load the image.")
    exit()

# Specify the pixel coordinates
x, y = 50, 50

# Get the 4-neighbors and 8-neighbors
neighbors_4, neighbors_8 = get_neighbors(image, x, y)

# Display the results
print(f"4-Neighbors of pixel ({x}, {y}): {neighbors_4}")
print(f"8-Neighbors of pixel ({x}, {y}): {neighbors_8}")

# Display the image
cv2.imshow('Original Image', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
